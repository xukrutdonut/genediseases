version: '3.8'

# Docker Compose especÃ­fico para Raspberry Pi 5
# Optimizado para ARM64 con configuraciones conservadoras

services:
  genereviews-app:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - TARGETPLATFORM=linux/arm64
    image: genereviews-rpi5:latest
    container_name: genereviews-rpi5
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_PATH=/usr/src/app/database/genereviews.db
      # Configuraciones optimizadas para RPi5
      - SCRAPER_DELAY=2000
      - SCRAPER_MAX_RETRIES=2
      - SCRAPER_TIMEOUT=15000
      # Node.js optimizations for ARM64
      - NODE_OPTIONS=--max-old-space-size=512 --gc-interval=50
      - UV_THREADPOOL_SIZE=2
      # SQLite optimizations
      - SQLITE_TMPDIR=/tmp
      - SQLITE_ENABLE_FTS5=1
      # RPi5 specific flags
      - RPI5_OPTIMIZED=true
      - ARCH_TYPE=arm64
    volumes:
      # Persistent data volumes
      - genereviews_data:/usr/src/app/database
      - genereviews_logs:/usr/src/app/logs
      # Temporary cache in memory for performance
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 128M
      # Optional: bind mount for development
      # - ./database:/usr/src/app/database
    deploy:
      resources:
        limits:
          # Conservative limits for RPi5 stability
          memory: 512M
          cpus: '1.5'
        reservations:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 60s    # Longer intervals for RPi5
      timeout: 20s     # Extended timeout for ARM processing
      retries: 3
      start_period: 180s  # Extended startup time
    networks:
      - genereviews-rpi5-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Security context for RPi
    security_opt:
      - no-new-privileges:true
    # Prevent container from consuming all system resources
    ulimits:
      nofile:
        soft: 1024
        hard: 2048

  # Nginx proxy optimized for Raspberry Pi 5
  nginx-rpi:
    image: nginx:alpine
    container_name: genereviews-nginx-rpi5
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-rpi5.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - genereviews_logs:/var/log/nginx
    depends_on:
      - genereviews-app
    networks:
      - genereviews-rpi5-network
    profiles:
      - production
    deploy:
      resources:
        limits:
          memory: 64M      # Very conservative for Nginx
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RPi system monitoring (optional)
  rpi-monitor:
    image: michaelmiklis/rpi-monitor:latest
    container_name: genereviews-rpi-monitor
    restart: unless-stopped
    ports:
      - "8888:8888"
    privileged: true
    volumes:
      - /opt/vc:/opt/vc:ro
      - /boot:/boot:ro
      - /sys:/dockerhost/sys:ro
      - /etc:/dockerhost/etc:ro
      - /proc:/dockerhost/proc:ro
      - /usr/lib:/dockerhost/usr/lib:ro
    networks:
      - genereviews-rpi5-network
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.1'

  # Database backup service for RPi5
  db-backup:
    image: alpine:latest
    container_name: genereviews-backup-rpi5
    restart: unless-stopped
    volumes:
      - genereviews_data:/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - RETENTION_DAYS=30
    command: >
      sh -c "
        apk add --no-cache sqlite curl &&
        mkdir -p /backups &&
        echo 'Creating backup script...' &&
        cat > /backup.sh << 'EOF'
        #!/bin/sh
        TIMESTAMP=$$(date +%Y%m%d_%H%M%S)
        BACKUP_FILE="/backups/genereviews_rpi5_$${TIMESTAMP}.db"
        echo \"Creating backup: $${BACKUP_FILE}\"
        sqlite3 /data/genereviews.db \".backup $${BACKUP_FILE}\" &&
        echo \"Backup completed successfully\" ||
        echo \"Backup failed\"
        # Clean old backups (keep last 30 days)
        find /backups -name \"genereviews_rpi5_*.db\" -mtime +${RETENTION_DAYS:-30} -delete
      EOF
        chmod +x /backup.sh &&
        echo '${BACKUP_SCHEDULE:-0 2 * * *} /backup.sh >> /var/log/backup.log 2>&1' > /etc/crontabs/root &&
        echo 'Backup service started for RPi5' &&
        crond -f -L /var/log/backup.log
      "
    profiles:
      - backup
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.1'
    networks:
      - genereviews-rpi5-network

  # Optional: Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower:arm64v8-latest
    container_name: genereviews-watchtower-rpi5
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_SCHEDULE=0 0 3 * * 0  # Weekly on Sunday at 3 AM
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_ROLLING_RESTART=true
    command: genereviews-rpi5
    profiles:
      - autoupdate
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.1'

  # Temperature monitoring and alerting
  temp-monitor:
    build:
      context: .
      dockerfile: Dockerfile.temp-monitor
    container_name: genereviews-temp-monitor-rpi5
    restart: unless-stopped
    privileged: true
    volumes:
      - /sys/class/thermal:/sys/class/thermal:ro
    environment:
      - TEMP_THRESHOLD=80
      - CHECK_INTERVAL=30
      - WEBHOOK_URL=${ALERT_WEBHOOK_URL:-}
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 16M
          cpus: '0.05'
    networks:
      - genereviews-rpi5-network

volumes:
  # Use local volumes for better control on RPi5
  genereviews_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/database
  genereviews_logs:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: ${PWD}/logs

networks:
  genereviews-rpi5-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
      com.docker.network.bridge.name: br-genereviews-rpi5
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16